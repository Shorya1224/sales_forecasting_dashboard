# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Dw4sTG9GWl3lV4o-P4O1WCC5_NWhVVdZ
"""

from google.colab import files
uploaded = files.upload()  # Upload train.csv

"""Load and Prepare the Data"""

import pandas as pd

df = pd.read_csv("train.csv")
print(df.columns)

df = pd.read_csv("train.csv")
df['Order Date'] = pd.to_datetime(df['Order Date'], dayfirst=True)
df = df.sort_values('Order Date')
df.head()

""" Aggregate Monthly Sales"""

# Group by month and sum the sales
df_monthly = df.groupby(pd.Grouper(key='Order Date', freq='M'))['Sales'].sum().reset_index()

# Rename columns for Prophet
df_monthly.columns = ['ds', 'y']
df_monthly.head()

!pip install prophet
from prophet import Prophet

"""Train Prophet Model and Forecast"""

# Initialize and fit the model
model = Prophet()
model.fit(df_monthly)

# Create a future dataframe for the next 6 months
future = model.make_future_dataframe(periods=6, freq='M')

# Forecast future sales
forecast = model.predict(future)

# Plot the forecast
model.plot(forecast)

"""Adding Inventory Logic"""

forecast['Inventory_Level'] = 100000

forecast['Alert'] = forecast.apply(
    lambda row: 'Understock' if row['yhat'] > row['Inventory_Level'] else 'OK',
    axis=1
)

# View last 10 rows
forecast[['ds', 'yhat', 'Inventory_Level', 'Alert']].tail(10)

"""Visualize Forecast vs. Actual"""

import matplotlib.pyplot as plt

plt.figure(figsize=(12, 5))
plt.plot(df_monthly['ds'], df_monthly['y'], label="Actual Sales")
plt.plot(forecast['ds'], forecast['yhat'], label="Forecast", linestyle='--')
plt.axhline(100000, color='red', linestyle=':', label='Inventory Level')
plt.title("Monthly Sales Forecast vs Actual")
plt.legend()
plt.show()

"""Download for streamlit"""

df_monthly.to_csv("actual_sales.csv", index=False)

from google.colab import files
files.download("actual_sales.csv")

forecast[['ds', 'yhat']].to_csv("forecast_sales.csv", index=False)

from google.colab import files
files.download("forecast_sales.csv")
